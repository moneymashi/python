package doc;

public class Intro0807_linus {
/* #########정리문제############
 * 
 * 터미널이란 윈도우로 표현하면 ()와 같은 것으로, 명령어를 입력하며 그래도 수행하면 다른표현으로 () 라고한다
 * > cmd, shell
 * 지금사용 중인 명령어가 어느 디렉터리에 존재하는지 전체경로표시법?
 * > pwd  ## 이걸 말하는게 맞나??
 * 리눅스 시스템에 대한정보를 확인?
 * > uname -a  ## 모든정보출력
 * 현재 로그인해서 사용중인 로그인명확인?
 * > users  ## 로그인된 사용자
 * ## who: 로그인한 모든 사용자 정보확인  == who am i 와 같은 결과.
 * ## whoami : 현재시스템사용중 사용자
 * ## logname : 현재 시스템을 사용중, 사용자 로그인확인.
 * 터미널창에서 실습한 명령어의 목록확인?
 * > history
 * 오늘날짜에 해당하는 달력출력?
 * > cal  ## == cal 8 2017  :: 2017년 8월달력보기
 * 사용자계정의 정보를 자세하게 확인?
 * >finger   ## sudo yum install finger 모듈설치 필요.
 * 
 * 
 * 
 * 
 * ---------------------------------
 * 계층구조 명령어
 *	/  ::루트디렉터리
 *	
 * 디렉터리  참고::http://webdir.tistory.com/101
 *	/home: 일반사용자 홈디렉터리
 *	/bin  :: 기본실행명령어
 *	/sbin :: 시스템 binaries) 시스템 운영 디렉터리, 루트계정만 접근가능.
 *	/etc  :: 설정관련
 *	/mnt :: mount
 *	/usr
 *	/proc :: 메모리 모든작업들 파일형태
 *	/tmp ::임시 파일저장 디렉터리
 *	/opt :: 리눅스에서 제공되지않는 프로그램을 추가설치하는경우.
 *	/lost+found :: 시스템 파일복구용
 *	## ls -al 로 함수들을 확인가능하다.
 *
 *	ls :: 디렉터리 파일정보리스트
 *	-l  ::모든 속성ㅈ어보
 *	-a :: 숨김파일로 지정된 파일까지 보기위함.
 *	-R :: 현재와 하위디렉터리까지.
 *	-t :: 가장 최신에 사용순서대로 파일정렬.    ##### 
 *	ls -l /usr  :: 특정디렉터리 내용확인법.
 *  ls *.cfg : cfg로 끝나는 파일리스트
 *	
 * mkdir : 디렉터리생성
 * rmdir : 내용없는 디렉터리 삭제
 * rm :: 파일삭제
 * rm -r :: 파일포함 디렉터리 삭제
 * rm -ri :: 해당디렉터리 하위파일삭제여부 확인.
 * mv :: 디렉터리, 파일이름 경로변경
 * 
 * -----------Prac
 * 해당하는 root하위의 디렉토리명 기술...
 * 기본실행명령어  :: /bin
 * 시스템설정파일  :: /etc
 * 공유 라이브러리  :: /lib
 * 가상파일시스템  :: /proc
 * 응용패키지프로그램설치  :: /opt
 * 
 * 다음 기본명령어 기술..
 * 현재디렉터리 위치표시 :: pwd
 * 새로운 디렉터리생성  :: mkdir
 * 빈디렉터리 삭제/ 파일잇는 디렉터리삭제 :: rmdir/ rm -r
 * 
 * .txt파일 전부지우기 rm *.txt
 * 
 * 
 * 
 * 
 * 
 * --------------------파일 구성요소
 * 구성: 파일이름, I-node, 데이터블록
 * 파일: 파일이름 변경, 수정, 삭제
 * 	ls -a 전체확인
 *  ls -l 종류확인 :: 일반 -, 디렉터리 d, 링크 l, 디바이스 b
 *  이외 옵션들 확인 참고: http://www.adma.kr/pc/cms/cms.php?mid=linux&pid=8
 *  
 *  일반파일 ls -l, ls -F
 *  디렉터리파일 ./ : 현재, ../상위, / 최상위
 *  링크파일: 파일명을 다르게 접근처리
 *  심볼릭링크: 저장위치만 호출. 원본파일 삭제하면 접근X
 * 	하드링크: 사본을 만들어 호출. 원본파일 삭제해도 접근O 
 *  ex) ln 원본파일 하드링크파일
 *  ex) ln -s 원본파일 심볼릭링크파일
 *  디바이스파일: 리눅스시스템에서 HDD, FDD, 프린터 마우스 키보드 사운드어댑터등. 하나의 파일로 처리.
 * 
 *  ln 옵션..
 *  -f: 대상파일이 이미 존재할 경우 지우고 새 링크파일 생성
	-i: 대상파일이 이미 존재할 경우 지울것인지 물어봄
	-b: 대상파일이 이미 존재할 경우 백업파일을 만든 후에 링크파일을 생성

 * I-node 
 * :Index-node로 데이터 블록이 디스크상의 어느주소에 위치하고잇는가에 대한정보기록
 * 	저장정보들:: 파일의종류, 소유권, 엑세스모드, 타임스탭프(파일갱신일)
 * 데이터블록
 * :파일저장할때, 구분없이 디스크에 저장되는데.. 실제데이터는 실제 디스크의 어느한쪽에 쌓여져잇는데. 이걸 데이터블록이라고한다.
 * 
 * 
 * cp :: copy   참고:http://webdir.tistory.com/139
 * 					http://corej21.tistory.com/42
 * 
 * mv 옵션 기본파일 이동/변경파일
 * -f : 이동할 위치에 동일 파일잇어도 강제이동.
 * 
 * find  #####
 * : 시스템에서 원하는 조건에 맞는 파일을 찾고자할떄 사용.
 * 형식:: find 경로명 조건옵션 파일이름(*, ?? ...)
 * 동작옵션들
 * 
 * 
 * 조건옵션
 * -group : 지정그룹의 소유파일
 * -name: 지정파일찾기 (*, ?, [])   ##
 * -newer : 지정파일보다 최근생성파일?
 * -size: 지정파일크기 n으로 찾기  ##
 *  c:byte/k:kbyte/w:word
 *  +n: n보다 큰파일, n: 정확한파일, -n:n보다 작은파일
 * -type : 찾고자하느 파일의 타입지정
 *  b:블록, c:캐릭터, d:디렉터, f:파일, s:심볼릭
 * -user : 지정한 사용자가 소유파일찾기
 * 
 * 동작옵션
 * -print: 찾은파일결과 return
 * -prune: 현재 디렉터리 하위디렉터리로는 안감.
 * -exec[명령] {} \;
 * -ok [] {} \;
 * 
 * 
 * -------ex)
 * /home/vagrant/findexp를 기준으로 동작명령 수행.
 * 해당파일 a01.txt생성
 * 폴드 a01work생성
 * a01.txt를 a01work폴드에 복사
 * findexp의 모든폴드와 파일을 현재시간으로 수정변경
 * findexp폴드 하위에 모든파일 삭제처리.
 * 
 * >>
 * cd findexp
 * touch a01.txt
 * == find /home/vagrant/* -type d -name 'find*' -exec touch {}/a01.txt \;
 * 	##### d: directory  find라는 파일들. {}: 결과(디렉터리). 주의: {}는 복수일수잇음.
 * touch a01.txt
 * mkdir a01work
 * == find /home/vagrant/* -type d -name 'find*' -exec mkdir {}/a01work \;
 * cd ..   ## findexp
 * cp a01.txt a01work
 * touch -c *
 * rm -rf *
 * 
 * ##### sudo  ::???
 * sudo find /home/vagrant/* -type d -name 'test1*' -exec mv {}/exp01.txt {}/exp10.log \;
 *   ###### {} == sudo find /home/vagrant/* -type d -name 'test1*'의 결과값
 * 
 * ** sudo는 find의 권한을 강화시켜줌.
 * ** sudo가 su에 비해 더 좋음 :su는 고유신분에 기반해서 권한이동. sudo는 비밀번호 공유필요없음.
 * 
 * 
 * 
 * ----------##### 사용자 권한 :: 하둡에서 가장 실수가많은부분, 권한의 범위설정.
 * chmod (change mode)
 * : 파일과 사용자ㄱ권한 변경처리..
 * 파일권한: 소유자, 그룹, 그외사용자
 * chmod @@@ 파일명
 * 1) 생성자 - 모든권한 rwx =7
 * 2) 생성자 소속그룹 - 모든권한 rwox = 7
 * 3) 그외사람 read만 설정  - r = 4
 * >> chmod 774 exp01.txt
 * 
 * 
 * r(4), w(2), x(1) => 7
 * ex) -rw-r--r--
 * 사용자, 사용자그룹, 그외 >> 6 4 4
 * 
 * -----------Prac
 *  /home/vagrant 하위폴드에 authorexp폴드생성
 *  하위에 다음과같이 파일,폴드생성후 권한설정.
 *  			user: grp: others:
 *  1. a01.txt r, x, -
 *  2. a02.txt w, w, x
 *  3. a03	   rw,r, w
 *  4. a04.sh rwx,x, x
 * 
 * ---------Prac
 * /home/vagrant 연습폴드 생성
 * 1. 지정용량이상 파일검색.
 * find /home/vagrant -size +30c -print
 * 2. 해당파일 백업파일생성.
 * find /home/vagrant/* -size +30c -exec cp {} /home/vagrant/backups \; 
 * 3. 해당원본파일 삭제.
 * find /home/vagrant/* -size +30c -exec rm -rf {} \; 
 * 
 * 
 * 
 * 
 * 
 * 
 *
 */
}

